class Solution {
    public int[] closestPrimes(int left, int right) {
        boolean [] primes = seive(right);
        List<Integer> list = new ArrayList<>(); 

        for(int i=left;i<=right;i++){
            if(primes[i]){
                list.add(i);
            }
        }
        if(list.size()<2){
            return new int[]{-1,-1};
        }
        int mindiff=Integer.MAX_VALUE,leftnum=0,rightnum=0;
        for(int i=0;i<list.size()-1;i++){
            int diff = list.get(i+1)-list.get(i);
            if(mindiff>diff){
                mindiff=diff;
                leftnum=list.get(i);
                rightnum=list.get(i+1);
            }
        }
        return new int []{leftnum,rightnum};
    }
    private boolean[] seive(int n){
        boolean [] primes = new boolean[n+1];
        Arrays.fill(primes,true);
        primes[0]=primes[1]=false;
        for(int i=2;i*i<=n;i++){
            if(primes[i]==true){
                for(int j=i*i;j<=n;j+=i){
                    primes[j]=false;
                }
            }
        }
        return primes;
    }

}
